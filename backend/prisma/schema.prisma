datasource db {
	provider = "postgresql"
	url      = "postgresql://user:password@localhost:5432/test?schema=public" //TODO: should get this from env
	//url      = "postgresql://user:password@ft_transcendence.database:5432/test?schema=public"
	//url = env("DATABASE_URL")
}
//psql -h localhost -p 5432 -U user -d test

generator client {
	provider = "prisma-client-js"
}

model User {
	id          Int             @id @default(autoincrement())
	intraId     Int             @unique
	name        String         	@unique
	intraName   String          @unique
	email		String			@unique
	role        Role            @default(USER)
	joinedAt    DateTime        @default(now())
	messages    Message[]
	channels    UserInChannel[]
	avatar      String
	games       Game[]

	//----- subject to removal -----//
	// friends             Int[]	//TODO: better way for this?
	// pendingFriends      Int[]
	// blocked             Int[]
}

model Channel {
	id        Int           @id @default(autoincrement())
	createdAt DateTime      @default(now())
	name      String        @unique
	type      ChannelType   @default(STANDARD)
	password  String?
	users     UserInChannel[]
	messages  Message[]
}

model UserInChannel {
	user        User    @relation(fields: [userName], references: [intraName])
	userName    String
	channel     Channel @relation(fields: [channelName], references: [name])
	channelName String

	role        Role
	joinedOn    DateTime @default(now())

	@@id([userName, channelName])
}

model Message {
	id          Int       @id @default(autoincrement())
	sentAt      DateTime  @default(now())
	text        String
	sender      User?     @relation(fields: [senderName], references: [intraName])
	senderName  String?
	channel     Channel?  @relation(fields: [channelName], references: [name])
	channelName String?
}

model Game {
	id          Int      @id @default(autoincrement())
	createdAt   DateTime @default(now())
	players     User[]
	victorScore Int
	loserScore  Int
	winnerId    Int
}

enum Role {
	USER
	ADMIN
}

enum ChannelType {
	DIRECT
	STANDARD
}
